insert-into-select.txt
Created Tue Jul 24 11:52:11 AKDT 2018
by Raymond E. Marcil <rmarcil@gci.com>


INSERT INTO SELECT


The SQL INSERT INTO SELECT Statement
====================================
The INSERT INTO SELECT statement copies data from
one table and inserts it into another table.

o INSERT INTO SELECT requires that data types in source
  and target tables match

o The existing records in the target table are unaffected


INSERT INTO SELECT Syntax
=========================
Copy all columns from one table to another table:

  INSERT INTO table2
  SELECT * FROM table1
  WHERE condition;
  Copy only some columns from one table into another table:

  INSERT INTO table2 (column1, column2, column3, ...)
  SELECT column1, column2, column3, ...
  FROM table1
  WHERE condition;

--www.w3schools.com/sql/sql_insert_into_select.asp

Need to get list of jobs that do not have a monitor already.
  select idJob from monitors;

Get list of jobIds that do not have a monitor:
  select distinct jobs.idJob from filexfer2.jobs, filexfer2.monitors
  where filexfer2.jobs.idJob!=filexfer2.monitors.idJob;

This query works (NOTE: select in where clause):

SELECT idJob FROM filexfer2.jobs   <=== The bomb per se.
WHERE idJob IN
  (select distinct jobs.idJob from filexfer2.jobs, filexfer2.monitors
  where filexfer2.jobs.idJob!=filexfer2.monitors.idJob);

Insert row in filexfer2.monitors for active jobs that
do not have one.

select * from filexfer2.monitors;

Last is (July 24, 2018):
  idMonitor:   434
  idJob:       833
  monitorName: StarSolutions MSC Usage - Sand Point - Export to Cycle30 - Data Latency

select count(*) from filexfer2.monitors;
  195	


INSERT INTO filexfer2.monitors (
  idJob,
  monitorName,
  severity,
  sqlTemplate,
  messageTemplete,
  enabled,
  emailSubjectTemplate,
  emailMessageTemplate,
  emailRecipients,
  emailEnabled)
VALUES
  ((SELECT idJob from filexfer2.jobs),
   (SELECT CONCAT(jobName," - Data Latency")),
   3,
   SELECT  MAX( `dtTransferStart` ) < NOW() - INTERVAL 3 HOUR AS `result`, MAX( `dtTransferStart` ) AS `lastXfer` 
   FROM `filexfer2`.`logs` WHERE `idJob` =  [% monitor.idJob %],
   "no",
   (SELECT CONCAT(jobName," - Data Latency")),
   "Data latency detected. Last file transferred at [% lastxfer %].",
   "ccresap@gci.com,rmarcil@gci.com",
   "yes");
WHERE idJob IN
  (select distinct jobs.idJob from filexfer2.jobs, filexfer2.monitors
  where filexfer2.jobs.idJob!=filexfer2.monitors.idJob);


Work in progress:
SELECT DISTINCT concat("INSERT INTO filexfer2.monitors (idJob,
monitorName,severity,sqlTemplate,messageTemplate,enabled,emailSubjectTemplate,
emailMessageTemplate,emailRecipients,emailEnabled) VALUES (",
filexfer2.jobs.idJob,',','"',jobName," - Data Latency",'"',',',3,',','"',
"SELECT MAX('dtTransferStart') < NOW() - INTERVAL 3 HOUR AS 'result',MAX('dtTransferStart') 
AS 'lastXfer' FROM 'filexfer2'.'logs WHERE 'idJob' =  [% monitor.idJob %],no,",
'(SELECT CONCAT(jobName," - Data Latency")),',
'"Data latency detected. Last file transferred at [% lastxfer %].",',
'"ccresap@gci.com,rmarcil@gci.com",',
'"yes");'
)
from filexfer2.jobs, filexfer2.monitors
where filexfer2.jobs.idJob!=filexfer2.monitors.idJob;



INSERT INTO filexfer2.monitors (
  idJob,
  monitorName,
  severity,
  sqlTemplate,
  messageTemplete, enabled, emailSubjectTemplate,
  emailMessageTemplate, emailRecipients,
  emailEnabled)
VALUES
  ((SELECT idJob from filexfer2.jobs),
   (SELECT CONCAT(jobName," - Data Latency")),
   3,
   "SELECT MAX( `dtTransferStart` ) < NOW() - INTERVAL 3 HOUR AS `result`, MAX( `dtTransferStart` ) AS `lastXfer` FROM `filexfer2`.`logs` WHERE `idJob` =  [% monitor.idJob %]",
   "Data latency detected. Last file transferred at [% lastxfer %].",
   "no",
   (SELECT CONCAT(jobName," - Data Latency")),
   "Data latency detected. Last file transferred at [% lastxfer %].",
   "ccresap@gci.com,rmarcil@gci.com",
   "yes");
WHERE idJob=196;   <=== Test row to insert
 
   
SELECT idJob,
FROM filexfer2.jobs
WHERE  runPolicy != 'never';


  idJob not in monitors already


Examples
========
Get monitors data:
  select * from monitors;

Columns:
  idMonitor:      sequencial key
  idJob:          syncs to idJob in jobs table
  monitorName:    jobName + " - Data Latency" 
  resourceName:   (null)
  severity:       3  (the default)

  sqlTemplate:
    SELECT 
      MAX( `dtTransferStart` ) < NOW() - INTERVAL 3 HOUR AS `result`,
      MAX( `dtTransferStart` ) AS `lastXfer`
    FROM `filexfer2`.`logs`
    WHERE `idJob` =  [% monitor.idJob %]

  messageTemplate:
    Data latency detected. Last file transferred at [% lastxfer %].    

  enabled: yes

  emailSubjectTemplate:
    jobName + ' - Data Latency'

  emailMessageTemplate:
    Data latency detected. Last file transferred at [% lastxfer %].

  emailRecipients:
    ccresap@gci.com,rmarcil@gci.com

  emailEnabled:
    yes
    

Get jobs data:
  select * from filexfer2.jobs where runPolicy!='never';



Links
=====
SQL INSERT INTO SELECT Statement
https://www.w3schools.com/sql/sql_insert_into_select.asp
